# Auto generated by 'inv collect-airflow'
from airfly._vendor.airflow.models.baseoperator import BaseOperator


class AwaitMessageSensor(BaseOperator):
    topics: "Sequence[str]"
    apply_function: "str"
    kafka_config_id: "str"
    apply_function_args: "Sequence[Any] | None"
    apply_function_kwargs: "dict[Any, Any] | None"
    poll_timeout: "float"
    poll_interval: "float"
    xcom_push_key: "_empty"


class AwaitMessageTriggerFunctionSensor(BaseOperator):
    topics: "Sequence[str]"
    apply_function: "str"
    event_triggered_function: "Callable"
    kafka_config_id: "str"
    apply_function_args: "Sequence[Any] | None"
    apply_function_kwargs: "dict[Any, Any] | None"
    poll_timeout: "float"
    poll_interval: "float"
