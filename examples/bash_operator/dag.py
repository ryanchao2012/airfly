# This file is auto-generated by airfly 1.0.0
from datetime import datetime, timedelta

from airflow.models import DAG
from airflow.utils.task_group import TaskGroup

# >>>>>>>>>> Include from 'params.py'
dag_kwargs = dict(
    schedule_interval="0 0 * * *",
    start_date=datetime(2021, 1, 1),
    catchup=False,
    dagrun_timeout=timedelta(minutes=60),
    tags=["example", "example2"],
    params={"example_key": "example_value"},
)
# <<<<<<<<<< End of code insertion
with DAG("example_bash_operator", **dag_kwargs) as dag:
    from airflow.operators.bash import BashOperator
    from airflow.operators.empty import EmptyOperator

    group_workflow = TaskGroup(group_id="workflow", prefix_group_id=False)
    workflow_also_run_this = BashOperator(
        task_id="workflow.also_run_this",
        bash_command='echo "run_id={{ run_id }} | dag_run={{ dag_run }}"',
        task_group=group_workflow,
    )
    workflow_run_this = BashOperator(
        task_id="workflow.run_this", bash_command="echo 1", task_group=group_workflow
    )
    workflow_run_this_last = EmptyOperator(
        task_id="workflow.run_this_last", task_group=group_workflow
    )
    workflow_runme_0 = BashOperator(
        task_id="workflow.runme_0",
        bash_command='echo "{{ task_instance_key_str }}" && sleep 1',
        task_group=group_workflow,
    )
    workflow_runme_1 = BashOperator(
        task_id="workflow.runme_1",
        bash_command='echo "{{ task_instance_key_str }}" && sleep 1',
        task_group=group_workflow,
    )
    workflow_runme_2 = BashOperator(
        task_id="workflow.runme_2",
        bash_command='echo "{{ task_instance_key_str }}" && sleep 1',
        task_group=group_workflow,
    )
    workflow_this_will_skip = BashOperator(
        task_id="workflow.this_will_skip",
        bash_command='echo "hello world"; exit 99;',
        task_group=group_workflow,
    )
    workflow_also_run_this >> workflow_run_this_last
    workflow_run_this >> workflow_run_this_last
    workflow_runme_0 >> workflow_run_this
    workflow_runme_1 >> workflow_run_this
    workflow_runme_2 >> workflow_run_this
    workflow_this_will_skip >> workflow_run_this_last
